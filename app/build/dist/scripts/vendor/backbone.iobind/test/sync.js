var assert=require("assert"),_=require("underscore"),Backbone=require("../dist/backbone.iosync");describe("Backbone.sync",function(){var e=Backbone.Collection.extend({url:function(){return"/library"}}),t,n={title:"The Tempest",author:"Bill Shakespeare",length:123};beforeEach(function(){t=new e,Backbone.socket={path:"",data:null,emit:function(e,t){Backbone.socket.path=e,Backbone.socket.data=t}}}),it("create",function(){t.create(n,{wait:!1}),assert.equal(Backbone.socket.path,"library:create"),assert.ok(_.isEqual(Backbone.socket.data,n))}),it("read",function(){t.fetch(),assert.equal(Backbone.socket.path,"library:read"),assert.ok(_.isEmpty(Backbone.socket.data))}),it("passing data",function(){t.fetch({data:{a:"a",one:1}}),assert.equal(Backbone.socket.path,"library:read"),assert.equal(Backbone.socket.data.a,"a"),assert.equal(Backbone.socket.data.one,1)}),it("update",function(){t.create(n,{wait:!1}),t.first().save({id:"1-the-tempest",author:"William Shakespeare"}),assert.equal(Backbone.socket.path,"library:update");var e=Backbone.socket.data;assert.equal(e.id,"1-the-tempest"),assert.equal(e.title,"The Tempest"),assert.equal(e.author,"William Shakespeare"),assert.equal(e.length,123)}),it("read model",function(){t.create(n,{wait:!1}),t.first().save({id:"2-the-tempest",author:"Tim Shakespeare"}),t.first().fetch(),assert.equal(Backbone.socket.path,"library:read"),assert.equal(Backbone.socket.data.id,"2-the-tempest")}),it("destroy",function(){t.create(n,{wait:!1}),t.first().save({id:"2-the-tempest",author:"Tim Shakespeare"}),t.first().destroy({wait:!0}),assert.equal(Backbone.socket.path,"library:delete"),assert.equal(Backbone.socket.data.id,"2-the-tempest")}),it("urlError",function(){var e=new Backbone.Model;assert.throws(function(){e.fetch()}),e.fetch({url:"/one/two"}),assert.equal(Backbone.socket.path,"one:read")}),it("#1052 - `options` is optional.",function(){var e=new Backbone.Model;e.url="/test",Backbone.sync("create",e),assert.equal(Backbone.socket.path,"test:create")}),it("Custom method",function(){var e=new Backbone.Model;e.url="/test",Backbone.sync("test_method",e),assert.equal(Backbone.socket.path,"test:test_method")}),it("patch",function(){t.create({id:"patch-id",title:"The Tempest",author:"Bill Shakespeare"},{wait:!1}),t.first().save({author:"Tim Shakespeare"},{patch:!0}),assert.equal(Backbone.socket.path,"library:patch"),assert.equal(Backbone.socket.data.id,"patch-id"),assert.equal(Backbone.socket.data.author,"Tim Shakespeare"),assert.equal(Backbone.socket.data.title,null)})});