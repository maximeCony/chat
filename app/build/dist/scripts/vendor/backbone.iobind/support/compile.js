var path=require("path"),fs=require("fs"),color=require("colors"),folio=require("folio"),version=require("../package.json").version,Glossary=folio.Glossary,about=["","  |_  _. _ | |_  _ ._  _ ".blue+"   o _ |_ o._  _|".green+"  Backbone.ioBind".grey,"  |_)(_|(_ |<|_)(_)| |(/_".blue+" o ".red+"|(_)|_)|| |(_|".green,""].join("\n");console.log(about);var iobind=new Glossary([path.join(__dirname,"..","lib","model.js"),path.join(__dirname,"..","lib","collection.js")],{prefix:fs.readFileSync(path.join(__dirname,"..","lib","prefix.js"),"utf8"),suffix:fs.readFileSync(path.join(__dirname,"..","lib","suffix.js"),"utf8")});iobind.compile(function(e,t){t=t.replace(/@VERSION/g,version),fs.writeFileSync(path.join(__dirname,"..","dist","backbone.iobind.js"),t),console.log("Build successful: ".green+"	dist/backbone.iobind.js".blue)});var iobindmin=new Glossary([path.join(__dirname,"..","lib","model.js"),path.join(__dirname,"..","lib","collection.js")],{minify:!0,prefix:fs.readFileSync(path.join(__dirname,"..","lib","prefix.js"),"utf8"),suffix:fs.readFileSync(path.join(__dirname,"..","lib","suffix.js"),"utf8")});iobindmin.compile(function(e,t){t=t.replace(/@VERSION/g,version);var n=fs.readFileSync(path.join(__dirname,"..","lib","copyright.js"));fs.writeFileSync(path.join(__dirname,"..","dist","backbone.iobind.min.js"),n+"\n"+t),console.log("Build successful: ".green+"	dist/backbone.iobind.min.js".blue)});var iosync=new Glossary([path.join(__dirname,"..","lib","sync.js")],{prefix:fs.readFileSync(path.join(__dirname,"..","lib","prefix.js"),"utf8"),suffix:fs.readFileSync(path.join(__dirname,"..","lib","suffix.js"),"utf8")});iosync.compile(function(e,t){fs.writeFileSync(path.join(__dirname,"..","dist","backbone.iosync.js"),t),console.log("Build successful: ".green+"	dist/backbone.iosync.js".blue)});var iosyncmin=new Glossary([path.join(__dirname,"..","lib","sync.js")],{minify:!0,prefix:fs.readFileSync(path.join(__dirname,"..","lib","prefix.js"),"utf8"),suffix:fs.readFileSync(path.join(__dirname,"..","lib","suffix.js"),"utf8")});iosyncmin.compile(function(e,t){var n=fs.readFileSync(path.join(__dirname,"..","lib","copyright.js"));fs.writeFileSync(path.join(__dirname,"..","dist","backbone.iosync.min.js"),n+"\n"+t),console.log("Build successful: ".green+"	dist/backbone.iosync.min.js".blue)});