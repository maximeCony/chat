/*!
     * if we are creating a new model to push to the server we don't want
     * to iobind as we only bind new models from the server. This is because
     * the server assigns the id.
     */

window.log=function(){log.history=log.history||[],log.history.push(arguments);if(this.console){arguments.callee=arguments.callee.caller;var e=[].slice.call(arguments);typeof console.log=="object"?log.apply.call(console.log,console,e):console.log.apply(console,e)}},window.socket=io.connect("http://localhost"),log(window.socket);var Minimal={};Minimal.App=Backbone.Router.extend({routes:{"":"index","/":"index"},index:function(){var e=new Minimal.Todos,t=new Minimal.TodoListForm(e);$("#TodoWrapper").append(t.el);var n=new Minimal.TodoList(e);$("#TodoWrapper").append(n.el),e.fetch()}}),Minimal.Todo=Backbone.Model.extend({urlRoot:"todo",noIoBind:!1,socket:window.socket,initialize:function(){_.bindAll(this,"serverChange","serverDelete","modelCleanup"),this.noIoBind||(this.ioBind("update",this.serverChange,this),this.ioBind("delete",this.serverDelete,this))},serverChange:function(e){e.fromServer=!0,this.set(e)},serverDelete:function(e){this.collection?this.collection.remove(this):this.trigger("remove",this),this.modelCleanup()},modelCleanup:function(){return this.ioUnbindAll(),this}}),Minimal.Todos=Backbone.Collection.extend({model:Minimal.Todo,url:"todos",socket:window.socket,initialize:function(){_.bindAll(this,"serverCreate","collectionCleanup"),this.ioBind("create",this.serverCreate,this)},serverCreate:function(e){var t=this.get(e.id);t?(e.fromServer=!0,t.set(e)):this.add(e)},collectionCleanup:function(e){return this.ioUnbindAll(),this.each(function(e){e.modelCleanup()}),this}}),Minimal.TodoList=Backbone.View.extend({id:"TodoList",initialize:function(e){_.bindAll(this,"render","addTodo"),this.todos=e,this.todos.bind("reset",this.render),this.todos.bind("add",this.addTodo),this.render()},render:function(){var e=this;return this.todos.each(function(t){e.addTodo(t)}),this},addTodo:function(e){var t=new Minimal.TodoListItem(e);$(this.el).append(t.el)}}),Minimal.TodoListItem=Backbone.View.extend({className:"todo",events:{"click .complete":"completeTodo","click .delete":"deleteTodo"},initialize:function(e){_.bindAll(this,"setStatus","completeTodo","deleteTodo","removeTodo"),this.model=e,this.model.bind("change:completed",this.setStatus),this.model.bind("remove",this.removeTodo),this.render()},render:function(){return $(this.el).html(template.item(this.model.toJSON())),$(this.el).attr("id",this.model.id),this.setStatus(),this},setStatus:function(){var e=this.model.get("completed");e?$(this.el).addClass("complete"):$(this.el).removeClass("complete")},completeTodo:function(){var e=this.model.get("completed");this.model.save({completed:!e})},deleteTodo:function(){this.model.destroy({silent:!0})},removeTodo:function(e){var t=this,n=this.$el.outerWidth();this.$el.css("width",n+"px"),this.$el.animate({"margin-left":n,opacity:0},200,function(){t.$el.animate({height:0},200,function(){t.$el.remove()})})}}),Minimal.TodoListForm=Backbone.View.extend({id:"TodoForm",events:{"click .button#add":"addTodo"},initialize:function(e){_.bindAll(this,"addTodo"),this.todos=e,this.render()},render:function(){return $(this.el).html(template.form()),this},addTodo:function(){var e=Minimal.Todo.extend({noIoBind:!0}),t={title:this.$('#TodoInput input[name="TodoInput"]').val(),completed:!1};this.$('#TodoInput input[name="TodoInput"]').val("");var n=new e(t);n.save()}}),$(document).ready(function(){window.app=new Minimal.App,Backbone.history.start()});